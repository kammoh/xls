# proto-file: xls/delay_model/delay_model.proto
# proto-message: xls.delay_model.DataPoints
# proto-file: xls/delay_model/delay_model.proto
# proto-message: xls.delay_model.DelayModel
op_models {
  op: "kIdentity"
  estimator {
    regression {
    }
  }
}
op_models {
  op: "kNot"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kAnd"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kNand"
  estimator {
    alias_op: "kAnd"
  }
}
op_models {
  op: "kOr"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kNor"
  estimator {
    alias_op: "kOr"
  }
}
op_models {
  op: "kXor"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kAndReduce"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kOrReduce"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kXorReduce"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kGate"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kEncode"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kAdd"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kSub"
  estimator {
    alias_op: "kAdd"
  }
}
op_models {
  op: "kNeg"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kSignExt"
  estimator {
    regression {
      expressions {
        bin_op: SUB
        lhs_expression {
          factor {
            source: RESULT_BIT_COUNT
          }
        }
        rhs_expression {
          factor {
            source: OPERAND_BIT_COUNT
          }
        }
      }
    }
  }
}
op_models {
  op: "kSel"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
      expressions {
        factor {
          source: OPERAND_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kUMul"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
    }
  }
  specializations {
    kind: OPERANDS_IDENTICAL
    estimator {
      regression {
        expressions {
          factor {
            source: OPERAND_BIT_COUNT
          }
        }
      }
    }
  }
}
op_models {
  op: "kSMul"
  estimator {
    alias_op: "kUMul"
  }
}
op_models {
  op: "kUMulp"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
    }
  }
  specializations {
    kind: OPERANDS_IDENTICAL
    estimator {
      regression {
        expressions {
          factor {
            source: OPERAND_BIT_COUNT
          }
        }
      }
    }
  }
}
op_models {
  op: "kSMulp"
  estimator {
    alias_op: "kUMulp"
  }
}
op_models {
  op: "kUDiv"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
      expressions {
        bin_op: MULTIPLY
        lhs_expression {
          factor {
            source: OPERAND_BIT_COUNT
          }
        }
        rhs_expression {
          factor {
            source: OPERAND_BIT_COUNT
          }
        }
      }
    }
  }
}
op_models {
  op: "kUMod"
  estimator {
    alias_op: "kUDiv"
  }
}
op_models {
  op: "kSDiv"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
      expressions {
        bin_op: MULTIPLY
        lhs_expression {
          factor {
            source: OPERAND_BIT_COUNT
          }
        }
        rhs_expression {
          factor {
            source: OPERAND_BIT_COUNT
          }
        }
      }
    }
  }
}
op_models {
  op: "kSMod"
  estimator {
    alias_op: "kSDiv"
  }
}
op_models {
  op: "kShll"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kShrl"
  estimator {
    alias_op: "kShll"
  }
}
op_models {
  op: "kShra"
  estimator {
    alias_op: "kShll"
  }
}
op_models {
  op: "kDynamicBitSlice"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
          operand_number: 1
        }
      }
    }
  }
}
op_models {
  op: "kBitSliceUpdate"
  estimator {
    alias_op: "kDynamicBitSlice"
  }
}
op_models {
  op: "kOneHot"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kSLe"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kSLt"
  estimator {
    alias_op: "kSLe"
  }
}
op_models {
  op: "kSGe"
  estimator {
    alias_op: "kSLe"
  }
}
op_models {
  op: "kSGt"
  estimator {
    alias_op: "kSLe"
  }
}
op_models {
  op: "kULe"
  estimator {
    alias_op: "kSLe"
  }
}
op_models {
  op: "kULt"
  estimator {
    alias_op: "kSLe"
  }
}
op_models {
  op: "kUGe"
  estimator {
    alias_op: "kSLe"
  }
}
op_models {
  op: "kUGt"
  estimator {
    alias_op: "kSLe"
  }
}
op_models {
  op: "kEq"
  estimator {
    regression {
      expressions {
        factor {
          source: OPERAND_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kNe"
  estimator {
    alias_op: "kEq"
  }
}
op_models {
  op: "kDecode"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kArrayIndex"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
      expressions {
        bin_op: DIVIDE
        lhs_expression {
          factor {
            source: OPERAND_BIT_COUNT
          }
        }
        rhs_expression {
          factor {
            source: RESULT_BIT_COUNT
          }
        }
      }
    }
  }
}
op_models {
  op: "kArrayUpdate"
  estimator {
    alias_op: "kSel"
  }
}
op_models {
  op: "kArraySlice"
  estimator {
    alias_op: "kArrayIndex"
  }
}
op_models {
  op: "kOneHotSel"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
      expressions {
        factor {
          source: OPERAND_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kPrioritySel"
  estimator {
    regression {
      expressions {
        factor {
          source: RESULT_BIT_COUNT
        }
      }
      expressions {
        factor {
          source: OPERAND_COUNT
        }
      }
    }
  }
}
op_models {
  op: "kBitSlice"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kArray"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kArrayConcat"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kConcat"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kLiteral"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kParam"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kReverse"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kTuple"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kTupleIndex"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kZeroExt"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kAssert"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kAfterAll"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kMinDelay"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kCover"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kReceive"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kSend"
  estimator {
    fixed: 0
  }
}
op_models {
  op: "kTrace"
  estimator {
    fixed: 0
  }
}
op_models { op: "kInputPort" estimator { fixed: 0 } }
op_models { op: "kOutputPort" estimator { fixed: 0 } }
op_models { op: "kRegisterRead" estimator { fixed: 0 } }
op_models { op: "kRegisterWrite" estimator { fixed: 0 } }

data_points {
  operation {
    op: "kIdentity"
    bit_count: 1
    operands {
      bit_count: 1
    }
  }
  delay: 704
}
data_points {
  operation {
    op: "kNot"
    bit_count: 4
    operands {
      bit_count: 4
    }
  }
  delay: 1016
}
data_points {
  operation {
    op: "kNot"
    bit_count: 16
    operands {
      bit_count: 16
    }
  }
  delay: 1073
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 1234
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 1234
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 1305
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 1307
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 1357
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 1965
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 2170
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 2581
}
data_points {
  operation {
    op: "kAnd"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 2426
}
data_points {
  operation {
    op: "kOr"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 1234
}
data_points {
  operation {
    op: "kOr"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 1234
}
data_points {
  operation {
    op: "kOr"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 1305
}
data_points {
  operation {
    op: "kOr"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 1307
}
data_points {
  operation {
    op: "kOr"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 1357
}
data_points {
  operation {
    op: "kOr"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 2104
}
data_points {
  operation {
    op: "kOr"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 2386
}
data_points {
  operation {
    op: "kOr"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 2401
}
data_points {
  operation {
    op: "kXor"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 1234
}
data_points {
  operation {
    op: "kXor"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 1234
}
data_points {
  operation {
    op: "kXor"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 1305
}
data_points {
  operation {
    op: "kXor"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 1307
}
data_points {
  operation {
    op: "kXor"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 1357
}
data_points {
  operation {
    op: "kXor"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 1953
}
data_points {
  operation {
    op: "kXor"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 2110
}
data_points {
  operation {
    op: "kXor"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 2200
}
data_points {
  operation {
    op: "kAndReduce"
    bit_count: 1
    operands {
      bit_count: 4
    }
  }
  delay: 1307
}
data_points {
  operation {
    op: "kAndReduce"
    bit_count: 1
    operands {
      bit_count: 8
    }
  }
  delay: 1794
}
data_points {
  operation {
    op: "kAndReduce"
    bit_count: 1
    operands {
      bit_count: 16
    }
  }
  delay: 2075
}
data_points {
  operation {
    op: "kAndReduce"
    bit_count: 1
    operands {
      bit_count: 32
    }
  }
  delay: 3835
}
data_points {
  operation {
    op: "kAndReduce"
    bit_count: 1
    operands {
      bit_count: 64
    }
  }
  delay: 3948
}
data_points {
  operation {
    op: "kAndReduce"
    bit_count: 1
    operands {
      bit_count: 128
    }
  }
  delay: 4320
}
data_points {
  operation {
    op: "kOrReduce"
    bit_count: 1
    operands {
      bit_count: 4
    }
  }
  delay: 1307
}
data_points {
  operation {
    op: "kOrReduce"
    bit_count: 1
    operands {
      bit_count: 8
    }
  }
  delay: 1992
}
data_points {
  operation {
    op: "kOrReduce"
    bit_count: 1
    operands {
      bit_count: 16
    }
  }
  delay: 2075
}
data_points {
  operation {
    op: "kOrReduce"
    bit_count: 1
    operands {
      bit_count: 32
    }
  }
  delay: 5235
}
data_points {
  operation {
    op: "kOrReduce"
    bit_count: 1
    operands {
      bit_count: 64
    }
  }
  delay: 3948
}
data_points {
  operation {
    op: "kOrReduce"
    bit_count: 1
    operands {
      bit_count: 128
    }
  }
  delay: 6524
}
data_points {
  operation {
    op: "kXorReduce"
    bit_count: 1
    operands {
      bit_count: 4
    }
  }
  delay: 1307
}
data_points {
  operation {
    op: "kXorReduce"
    bit_count: 1
    operands {
      bit_count: 8
    }
  }
  delay: 2310
}
data_points {
  operation {
    op: "kXorReduce"
    bit_count: 1
    operands {
      bit_count: 16
    }
  }
  delay: 2195
}
data_points {
  operation {
    op: "kXorReduce"
    bit_count: 1
    operands {
      bit_count: 32
    }
  }
  delay: 3620
}
data_points {
  operation {
    op: "kXorReduce"
    bit_count: 1
    operands {
      bit_count: 64
    }
  }
  delay: 3516
}
data_points {
  operation {
    op: "kXorReduce"
    bit_count: 1
    operands {
      bit_count: 128
    }
  }
  delay: 6047
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 1
    operands {
      bit_count: 1
    }
  }
  delay: 704
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 4
    operands {
      bit_count: 1
    }
  }
  delay: 710
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 4
    operands {
      bit_count: 2
    }
  }
  delay: 706
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 8
    operands {
      bit_count: 4
    }
  }
  delay: 710
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 16
    operands {
      bit_count: 8
    }
  }
  delay: 778
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 16
    operands {
      bit_count: 12
    }
  }
  delay: 780
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 32
    operands {
      bit_count: 16
    }
  }
  delay: 780
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 32
    operands {
      bit_count: 24
    }
  }
  delay: 780
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 64
    operands {
      bit_count: 32
    }
  }
  delay: 780
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 64
    operands {
      bit_count: 48
    }
  }
  delay: 780
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 128
    operands {
      bit_count: 64
    }
  }
  delay: 780
}
data_points {
  operation {
    op: "kSignExt"
    bit_count: 128
    operands {
      bit_count: 96
    }
  }
  delay: 780
}
data_points {
  operation {
    op: "kShll"
    bit_count: 128
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 7
    }
  }
  delay: 6391
}
data_points {
  operation {
    op: "kShll"
    bit_count: 64
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 6
    }
  }
  delay: 5218
}
data_points {
  operation {
    op: "kShll"
    bit_count: 32
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 5
    }
  }
  delay: 4172
}
data_points {
  operation {
    op: "kShll"
    bit_count: 24
    operands {
      bit_count: 24
    }
    operands {
      bit_count: 5
    }
  }
  delay: 4125
}
data_points {
  operation {
    op: "kShll"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 4
    }
  }
  delay: 3321
}
data_points {
  operation {
    op: "kShll"
    bit_count: 12
    operands {
      bit_count: 12
    }
    operands {
      bit_count: 4
    }
  }
  delay: 3187
}
data_points {
  operation {
    op: "kShll"
    bit_count: 8
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 3
    }
  }
  delay: 2605
}
data_points {
  operation {
    op: "kShll"
    bit_count: 6
    operands {
      bit_count: 6
    }
    operands {
      bit_count: 3
    }
  }
  delay: 2729
}
data_points {
  operation {
    op: "kShll"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 2
    }
  }
  delay: 1674
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 8
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 4
    }
  }
  delay: 3320
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 8
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 5
    }
  }
  delay: 3932
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 8
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 6
    }
  }
  delay: 4987
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 8
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 7
    }
  }
  delay: 6248
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 8
    operands {
      bit_count: 256
    }
    operands {
      bit_count: 8
    }
  }
  delay: 7146
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 16
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 5
    }
  }
  delay: 4292
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 16
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 6
    }
  }
  delay: 5376
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 16
    operands {
      bit_count: 128
    }
    operands {
      bit_count: 7
    }
  }
  delay: 6074
}
data_points {
  operation {
    op: "kDynamicBitSlice"
    bit_count: 16
    operands {
      bit_count: 256
    }
    operands {
      bit_count: 8
    }
  }
  delay: 7463
}
data_points {
  operation {
    op: "kArrayIndex"
    bit_count: 1
    operands {
      bit_count: 1
      element_count: 16
    }
    operands {
      bit_count: 4
    }
  }
  delay: 3072
}
data_points {
  operation {
    op: "kArrayIndex"
    bit_count: 2
    operands {
      bit_count: 2
      element_count: 16
    }
    operands {
      bit_count: 4
    }
  }
  delay: 3431
}
data_points {
  operation {
    op: "kArrayIndex"
    bit_count: 1
    operands {
      bit_count: 1
      element_count: 32
    }
    operands {
      bit_count: 5
    }
  }
  delay: 4326
}
data_points {
  operation {
    op: "kArrayIndex"
    bit_count: 2
    operands {
      bit_count: 2
      element_count: 32
    }
    operands {
      bit_count: 5
    }
  }
  delay: 4825
}
data_points {
  operation {
    op: "kArrayIndex"
    bit_count: 1
    operands {
      bit_count: 1
      element_count: 64
    }
    operands {
      bit_count: 6
    }
  }
  delay: 4866
}
data_points {
  operation {
    op: "kSel"
    bit_count: 64
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 4095
}
data_points {
  operation {
    op: "kSel"
    bit_count: 32
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 3748
}
data_points {
  operation {
    op: "kSel"
    bit_count: 16
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 4245
}
data_points {
  operation {
    op: "kSel"
    bit_count: 8
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 1598
}
data_points {
  operation {
    op: "kSel"
    bit_count: 64
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 4924
}
data_points {
  operation {
    op: "kSel"
    bit_count: 32
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 5383
}
data_points {
  operation {
    op: "kSel"
    bit_count: 16
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 4116
}
data_points {
  operation {
    op: "kSel"
    bit_count: 8
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 3903
}
data_points {
  operation {
    op: "kOneHotSel"
    bit_count: 64
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 5724
}
data_points {
  operation {
    op: "kOneHotSel"
    bit_count: 32
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 3566
}
data_points {
  operation {
    op: "kOneHotSel"
    bit_count: 16
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 2717
}
data_points {
  operation {
    op: "kOneHotSel"
    bit_count: 16
    operands {
      bit_count: 5
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 2475
}
data_points {
  operation {
    op: "kPrioritySel"
    bit_count: 64
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 6333
}
data_points {
  operation {
    op: "kPrioritySel"
    bit_count: 32
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 6358
}
data_points {
  operation {
    op: "kPrioritySel"
    bit_count: 16
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 2717
}
data_points {
  operation {
    op: "kPrioritySel"
    bit_count: 16
    operands {
      bit_count: 5
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 4008
}
data_points {
  operation {
    op: "kGate"
    bit_count: 64
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 64
    }
  }
  delay: 3818
}
data_points {
  operation {
    op: "kGate"
    bit_count: 40
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 40
    }
  }
  delay: 3363
}
data_points {
  operation {
    op: "kGate"
    bit_count: 24
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 24
    }
  }
  delay: 2803
}
data_points {
  operation {
    op: "kGate"
    bit_count: 8
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 8
    }
  }
  delay: 1841
}
data_points {
  operation {
    op: "kGate"
    bit_count: 4
    operands {
      bit_count: 1
    }
    operands {
      bit_count: 4
    }
  }
  delay: 1354
}
data_points {
  operation {
    op: "kDecode"
    bit_count: 256
    operands {
      bit_count: 8
    }
  }
  delay: 6763
}
data_points {
  operation {
    op: "kDecode"
    bit_count: 128
    operands {
      bit_count: 7
    }
  }
  delay: 5166
}
data_points {
  operation {
    op: "kDecode"
    bit_count: 64
    operands {
      bit_count: 6
    }
  }
  delay: 4836
}
data_points {
  operation {
    op: "kDecode"
    bit_count: 32
    operands {
      bit_count: 5
    }
  }
  delay: 5119
}
data_points {
  operation {
    op: "kDecode"
    bit_count: 16
    operands {
      bit_count: 4
    }
  }
  delay: 2185
}
data_points {
  operation {
    op: "kDecode"
    bit_count: 8
    operands {
      bit_count: 3
    }
  }
  delay: 1947
}
data_points {
  operation {
    op: "kEncode"
    bit_count: 8
    operands {
      bit_count: 256
    }
  }
  delay: 4531
}
data_points {
  operation {
    op: "kEncode"
    bit_count: 7
    operands {
      bit_count: 128
    }
  }
  delay: 3806
}
data_points {
  operation {
    op: "kEncode"
    bit_count: 6
    operands {
      bit_count: 64
    }
  }
  delay: 3396
}
data_points {
  operation {
    op: "kEncode"
    bit_count: 5
    operands {
      bit_count: 32
    }
  }
  delay: 2413
}
data_points {
  operation {
    op: "kEncode"
    bit_count: 4
    operands {
      bit_count: 16
    }
  }
  delay: 2192
}
data_points {
  operation {
    op: "kEncode"
    bit_count: 3
    operands {
      bit_count: 8
    }
  }
  delay: 1372
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 129
    operands {
      bit_count: 128
    }
  }
  delay: 19238
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 65
    operands {
      bit_count: 64
    }
  }
  delay: 11427
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 48
    operands {
      bit_count: 47
    }
  }
  delay: 15391
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 33
    operands {
      bit_count: 32
    }
  }
  delay: 5146
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 25
    operands {
      bit_count: 24
    }
  }
  delay: 4304
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 16
    operands {
      bit_count: 15
    }
  }
  delay: 4278
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 9
    operands {
      bit_count: 8
    }
  }
  delay: 2825
}
data_points {
  operation {
    op: "kOneHot"
    bit_count: 6
    operands {
      bit_count: 5
    }
  }
  delay: 1733
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 100
    operands {
      bit_count: 100
    }
    operands {
      bit_count: 100
    }
  }
  delay: 4701
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 64
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 3714
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 40
    operands {
      bit_count: 40
    }
    operands {
      bit_count: 40
    }
  }
  delay: 3045
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 32
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 2811
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 24
    operands {
      bit_count: 24
    }
    operands {
      bit_count: 24
    }
  }
  delay: 2587
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 20
    operands {
      bit_count: 20
    }
    operands {
      bit_count: 20
    }
  }
  delay: 2375
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 2366
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 12
    operands {
      bit_count: 12
    }
    operands {
      bit_count: 12
    }
  }
  delay: 2184
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 10
    operands {
      bit_count: 10
    }
    operands {
      bit_count: 10
    }
  }
  delay: 2199
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 8
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 2145
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 6
    operands {
      bit_count: 6
    }
    operands {
      bit_count: 6
    }
  }
  delay: 2088
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 5
    operands {
      bit_count: 5
    }
    operands {
      bit_count: 5
    }
  }
  delay: 1920
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 2292
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 3
    operands {
      bit_count: 3
    }
    operands {
      bit_count: 3
    }
  }
  delay: 1865
}
data_points {
  operation {
    op: "kAdd"
    bit_count: 2
    operands {
      bit_count: 2
    }
    operands {
      bit_count: 2
    }
  }
  delay: 1350
}
data_points {
  operation {
    op: "kNeg"
    bit_count: 150
    operands {
      bit_count: 150
    }
  }
  delay: 6012
}
data_points {
  operation {
    op: "kNeg"
    bit_count: 128
    operands {
      bit_count: 128
    }
  }
  delay: 5420
}
data_points {
  operation {
    op: "kNeg"
    bit_count: 64
    operands {
      bit_count: 64
    }
  }
  delay: 3714
}
data_points {
  operation {
    op: "kNeg"
    bit_count: 40
    operands {
      bit_count: 40
    }
  }
  delay: 3040
}
data_points {
  operation {
    op: "kNeg"
    bit_count: 32
    operands {
      bit_count: 32
    }
  }
  delay: 2708
}
data_points {
  operation {
    op: "kNeg"
    bit_count: 24
    operands {
      bit_count: 24
    }
  }
  delay: 2455
}
data_points {
  operation {
    op: "kNeg"
    bit_count: 8
    operands {
      bit_count: 8
    }
  }
  delay: 2145
}
data_points {
  operation {
    op: "kNeg"
    bit_count: 4
    operands {
      bit_count: 4
    }
  }
  delay: 1347
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 96
    operands {
      bit_count: 96
    }
    operands {
      bit_count: 96
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 20429
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 64
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 15413
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 47
    operands {
      bit_count: 47
    }
    operands {
      bit_count: 47
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 10051
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 32
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 6993
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 24
    operands {
      bit_count: 24
    }
    operands {
      bit_count: 24
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 6464
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 5365
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 8
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 5361
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 4
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 5224
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 6
    operands {
      bit_count: 6
    }
    operands {
      bit_count: 6
    }
  }
  delay: 5089
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 8
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 5232
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 16
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 5224
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 12
    operands {
      bit_count: 12
    }
    operands {
      bit_count: 12
    }
  }
  delay: 5110
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 5463
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 32
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 5359
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 24
    operands {
      bit_count: 24
    }
    operands {
      bit_count: 24
    }
  }
  delay: 6464
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 32
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 6688
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 64
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 8145
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 47
    operands {
      bit_count: 47
    }
    operands {
      bit_count: 47
    }
  }
  delay: 10223
}
data_points {
  operation {
    op: "kUMul"
    bit_count: 64
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 14806
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 96
    operands {
      bit_count: 47
    }
    operands {
      bit_count: 47
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 12168
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 64
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 8649
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 48
    operands {
      bit_count: 24
    }
    operands {
      bit_count: 24
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 7897
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 32
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 7064
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 8
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
    specialization: OPERANDS_IDENTICAL
  }
  delay: 6109
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 118
    operands {
      bit_count: 59
    }
    operands {
      bit_count: 59
    }
  }
  delay: 17182
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 94
    operands {
      bit_count: 47
    }
    operands {
      bit_count: 47
    }
  }
  delay: 12016
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 64
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 7992
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 48
    operands {
      bit_count: 24
    }
    operands {
      bit_count: 24
    }
  }
  delay: 8200
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 32
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 7113
}
data_points {
  operation {
    op: "kUMulp"
    bit_count: 16
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 6684
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 2271
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 6
    }
    operands {
      bit_count: 6
    }
  }
  delay: 4463
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 4800
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 12
    }
    operands {
      bit_count: 12
    }
  }
  delay: 5224
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 5235
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 5451
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 40
    }
    operands {
      bit_count: 40
    }
  }
  delay: 5970
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 47
    }
    operands {
      bit_count: 47
    }
  }
  delay: 6060
}
data_points {
  operation {
    op: "kSLe"
    bit_count: 1
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 6382
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 4
    }
    operands {
      bit_count: 4
    }
  }
  delay: 2192
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 6
    }
    operands {
      bit_count: 6
    }
  }
  delay: 2038
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 2138
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 12
    }
    operands {
      bit_count: 12
    }
  }
  delay: 5674
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 3396
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 3869
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 40
    }
    operands {
      bit_count: 40
    }
  }
  delay: 4933
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 47
    }
    operands {
      bit_count: 47
    }
  }
  delay: 4869
}
data_points {
  operation {
    op: "kEq"
    bit_count: 1
    operands {
      bit_count: 64
    }
    operands {
      bit_count: 64
    }
  }
  delay: 5833
}
data_points {
  operation {
    op: "kUDiv"
    bit_count: 8
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 25793
}
data_points {
  operation {
    op: "kUDiv"
    bit_count: 12
    operands {
      bit_count: 12
    }
    operands {
      bit_count: 12
    }
  }
  delay: 44883
}
data_points {
  operation {
    op: "kUDiv"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 68166
}
data_points {
  operation {
    op: "kUDiv"
    bit_count: 32
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 183823
}
data_points {
  operation {
    op: "kSDiv"
    bit_count: 8
    operands {
      bit_count: 8
    }
    operands {
      bit_count: 8
    }
  }
  delay: 32289
}
data_points {
  operation {
    op: "kSDiv"
    bit_count: 12
    operands {
      bit_count: 12
    }
    operands {
      bit_count: 12
    }
  }
  delay: 52493
}
data_points {
  operation {
    op: "kSDiv"
    bit_count: 16
    operands {
      bit_count: 16
    }
    operands {
      bit_count: 16
    }
  }
  delay: 73421
}
data_points {
  operation {
    op: "kSDiv"
    bit_count: 32
    operands {
      bit_count: 32
    }
    operands {
      bit_count: 32
    }
  }
  delay: 191938
}

