build --action_env=BAZEL_CXXOPTS=-std=c++17
build --cxxopt "-std=c++17"
# Enable default C++ extensions (required in switching to our packaged LLVM)
build --copt "-D_DEFAULT_SOURCE=1"
# Signal that we're using a compliant C++17 implementation with features removed
# (Required for (e.g.) Boost compatibility)
build --copt "-D_HAS_AUTO_PTR_ETC=0"
build --copt "-Wno-sign-compare"
build --copt "-Wno-comment"
build --host_cxxopt "-std=c++17"
# Enable default C++ extensions (required in switching to our packaged LLVM)
build --host_copt "-D_DEFAULT_SOURCE=1"
# Signal that we're using a compliant C++17 implementation with features removed
# (Required for (e.g.) Boost compatibility)
build --host_copt "-D_HAS_AUTO_PTR_ETC=0"
build --host_copt "-Wno-sign-compare"
build --host_copt "-Wno-comment"
# use absl in googletest to work around
# https://github.com/google/googletest/issues/4383
build --define absl=1
build --incompatible_enable_cc_toolchain_resolution
build --@llvm_zstd//:llvm_enable_zstd=false

# Settings for --config=asan address sanitizer build
build:asan --strip=never
build:asan --copt -fsanitize=address
build:asan --copt -DADDRESS_SANITIZER
build:asan --copt -O1
build:asan --copt -g
build:asan --copt -fno-omit-frame-pointer
build:asan --linkopt -fsanitize=address

# To regenerate this file (if needed), please run:
#
#  bazel run @com_google_fuzztest//bazel:setup_configs > fuzztest.bazelrc
#
try-import %workspace%/fuzztest.bazelrc

# For macOS only:
build --features=-libtool
